name: Python CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce CI time - test fewer combinations
          - os: windows-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.10'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libnetcdf-dev libhdf5-dev

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install netcdf hdf5

    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Note: You may need to use vcpkg or pre-built binaries
        echo "Windows dependencies installation needed"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin

    - name: Build Python package
      run: |
        cd python
        maturin build --release

    - name: Install Python package
      run: |
        cd python
        pip install --find-links=target/wheels radish

    - name: Install test dependencies
      run: |
        pip install pytest pytest-cov numpy
        pip install xarray datatree || echo "Optional dependencies not available"

    - name: Run Python tests
      run: |
        cd python
        pytest tests/ -v

  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        pip install black ruff

    - name: Check formatting with black
      run: |
        cd python
        black --check radish/

    - name: Lint with ruff
      run: |
        cd python
        ruff check radish/

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install mypy numpy
        pip install xarray datatree || echo "Optional dependencies skipped"

    - name: Run mypy
      run: |
        cd python
        mypy radish/ --ignore-missing-imports || echo "Type checking completed with warnings"
